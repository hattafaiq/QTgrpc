// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stringreverse.proto

#include "stringreverse.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace stringreverse {
PROTOBUF_CONSTEXPR StringRequest::StringRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.original_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StringRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringRequestDefaultTypeInternal() {}
  union {
    StringRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringRequestDefaultTypeInternal _StringRequest_default_instance_;
PROTOBUF_CONSTEXPR StringReply::StringReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reversed_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StringReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringReplyDefaultTypeInternal() {}
  union {
    StringReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringReplyDefaultTypeInternal _StringReply_default_instance_;
}  // namespace stringreverse
static ::_pb::Metadata file_level_metadata_stringreverse_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_stringreverse_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_stringreverse_2eproto = nullptr;

const uint32_t TableStruct_stringreverse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stringreverse::StringRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stringreverse::StringRequest, _impl_.original_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stringreverse::StringReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stringreverse::StringReply, _impl_.reversed_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::stringreverse::StringRequest)},
  { 7, -1, -1, sizeof(::stringreverse::StringReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::stringreverse::_StringRequest_default_instance_._instance,
  &::stringreverse::_StringReply_default_instance_._instance,
};

const char descriptor_table_protodef_stringreverse_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023stringreverse.proto\022\rstringreverse\"!\n\r"
  "StringRequest\022\020\n\010original\030\001 \001(\t\"\037\n\013Strin"
  "gReply\022\020\n\010reversed\030\001 \001(\t2Z\n\rStringRevers"
  "e\022I\n\013sendRequest\022\034.stringreverse.StringR"
  "equest\032\032.stringreverse.StringReply\"\000b\006pr"
  "oto3"
  ;
static ::_pbi::once_flag descriptor_table_stringreverse_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_stringreverse_2eproto = {
    false, false, 204, descriptor_table_protodef_stringreverse_2eproto,
    "stringreverse.proto",
    &descriptor_table_stringreverse_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_stringreverse_2eproto::offsets,
    file_level_metadata_stringreverse_2eproto, file_level_enum_descriptors_stringreverse_2eproto,
    file_level_service_descriptors_stringreverse_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_stringreverse_2eproto_getter() {
  return &descriptor_table_stringreverse_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_stringreverse_2eproto(&descriptor_table_stringreverse_2eproto);
namespace stringreverse {

// ===================================================================

class StringRequest::_Internal {
 public:
};

StringRequest::StringRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stringreverse.StringRequest)
}
StringRequest::StringRequest(const StringRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.original_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.original_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.original_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_original().empty()) {
    _this->_impl_.original_.Set(from._internal_original(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:stringreverse.StringRequest)
}

inline void StringRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.original_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.original_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.original_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StringRequest::~StringRequest() {
  // @@protoc_insertion_point(destructor:stringreverse.StringRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.original_.Destroy();
}

void StringRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:stringreverse.StringRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.original_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string original = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_original();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stringreverse.StringRequest.original"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stringreverse.StringRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string original = 1;
  if (!this->_internal_original().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_original().data(), static_cast<int>(this->_internal_original().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stringreverse.StringRequest.original");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_original(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stringreverse.StringRequest)
  return target;
}

size_t StringRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stringreverse.StringRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string original = 1;
  if (!this->_internal_original().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_original());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringRequest::GetClassData() const { return &_class_data_; }


void StringRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringRequest*>(&to_msg);
  auto& from = static_cast<const StringRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stringreverse.StringRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_original().empty()) {
    _this->_internal_set_original(from._internal_original());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringRequest::CopyFrom(const StringRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stringreverse.StringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringRequest::IsInitialized() const {
  return true;
}

void StringRequest::InternalSwap(StringRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.original_, lhs_arena,
      &other->_impl_.original_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StringRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_stringreverse_2eproto_getter, &descriptor_table_stringreverse_2eproto_once,
      file_level_metadata_stringreverse_2eproto[0]);
}

// ===================================================================

class StringReply::_Internal {
 public:
};

StringReply::StringReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stringreverse.StringReply)
}
StringReply::StringReply(const StringReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reversed_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reversed_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reversed_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reversed().empty()) {
    _this->_impl_.reversed_.Set(from._internal_reversed(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:stringreverse.StringReply)
}

inline void StringReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reversed_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reversed_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reversed_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StringReply::~StringReply() {
  // @@protoc_insertion_point(destructor:stringreverse.StringReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reversed_.Destroy();
}

void StringReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringReply::Clear() {
// @@protoc_insertion_point(message_clear_start:stringreverse.StringReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reversed_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reversed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_reversed();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stringreverse.StringReply.reversed"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stringreverse.StringReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reversed = 1;
  if (!this->_internal_reversed().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reversed().data(), static_cast<int>(this->_internal_reversed().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stringreverse.StringReply.reversed");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reversed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stringreverse.StringReply)
  return target;
}

size_t StringReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stringreverse.StringReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reversed = 1;
  if (!this->_internal_reversed().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reversed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringReply::GetClassData() const { return &_class_data_; }


void StringReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringReply*>(&to_msg);
  auto& from = static_cast<const StringReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stringreverse.StringReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reversed().empty()) {
    _this->_internal_set_reversed(from._internal_reversed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringReply::CopyFrom(const StringReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stringreverse.StringReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringReply::IsInitialized() const {
  return true;
}

void StringReply::InternalSwap(StringReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reversed_, lhs_arena,
      &other->_impl_.reversed_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StringReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_stringreverse_2eproto_getter, &descriptor_table_stringreverse_2eproto_once,
      file_level_metadata_stringreverse_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace stringreverse
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::stringreverse::StringRequest*
Arena::CreateMaybeMessage< ::stringreverse::StringRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stringreverse::StringRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::stringreverse::StringReply*
Arena::CreateMaybeMessage< ::stringreverse::StringReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stringreverse::StringReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
